function lab2()  
   X = [-0.45,-0.33,2.92,-1.25,-1.20,0.05,-0.53,-0.19,1.49,0.67,...
        0.22,1.23,0.50,-0.92,0.90,-1.52,-0.15,-1.24,-0.47,-0.45,...
        0.18,-0.05,1.58,1.74,2.37,-0.24,-1.34,1.05,1.28,1.37,1.18,...
        0.22,0.11,0.28,-0.64,-0.39,-1.77,-1.61,0.47,0.77,-0.27,-1.19,...
        -0.25,1.04,-0.16,0.42,0.29,0.10,1.04,0.43,-0.67,0.41,-0.62,...
        -1.49,1.46,-2.77,2.09,0.88,-0.36,-0.71,-0.62,1.34,-0.78,-0.15,...
        2.69,0.92,1.68,-0.12,0.34,0.74,1.72,1.24,0.23,0.76,0.87,...
        -1.52,0.63,-0.56,0.83,0.31,-0.18,0.99,-1.01,0.58,1.21,-1.51,...
        0.65,0.35,-0.37,-0.50,-0.73,0.63,0.33,1.56,-0.98,0.85,0.56,...
        -1.07,1.47,1.44,1.91,0.24,1.34,0.99,1.27,0.11,0.22,-0.25,0.35,...
        -0.03,-0.56,-0.79,2.41,-0.45,-0.44,0.07,0.64,0.69,0.10,-0.28];

    % Уровень доверия
    gamma = 0.8;
    %gamma = input('Введите уровень доверия: ')
    % Объем выборки 
    N = length(X);
    % Точечная оценка мат. ожидания
    M = mean(X);
    % Точечная оценка дисперсии
    S2 = var(X);
    % Нижняя граница доверительного интервала для мат. ожидания
    M_low = find_m_low(N, M, S2, gamma);
    % Верхняя граница доверительного интервала для мат. ожидания
    M_high = find_m_high(N, M, S2, gamma);
    % Нижняя граница доверительного интервала для дисперсии
    S2_low = find_S2_low(N, S2, gamma);
    % Верхняя граница доверительного интервала для дисперсии
    S2_high = find_S2_high(N, S2, gamma);
    
    % Вывод полученных ранее значений
    fprintf('Точечная оценка математического ожидания = %.3f\n', M);
    fprintf('Точечная оценка дисперсии = %.3f\n', S2);
    fprintf('Нижняя граница доверительного интервала для математического ожидания = %.3f\n', M_low);
    fprintf('Верхняя граница доверительного интервала для математического ожидания = %.3f\n', M_high);
    fprintf('Нижняя граница доверительного интервала для дисперсии = %.3f\n', S2_low);
    fprintf('Верхняя граница доверительного интервала для дисперсии = %.3f\n', S2_high);
    
    % Массив точечных оценок для математического ожидания
    M_array = zeros(1, N);
    % Массив точечных оценок для дисперсии
    S2_array = zeros(1, N);
    % Массивы для нижних и верхних границ для математического ожидания
    M_low_array = zeros(1, N);
    M_high_array = zeros(1, N);
    % Массивы для нижних и верхних границ для дисперсии
    S2_low_array = zeros(1, N);
    S2_high_array = zeros(1, N);
    
    for i = 1 : N
        temp_m = mean(X(1:i));
        temp_s2 = var(X(1:i));
        M_array(i) = temp_m;
        S2_array(i) = temp_s2;
        M_low_array(i) = find_m_low(i, temp_m, temp_s2, gamma);
        M_high_array(i) = find_m_high(i, temp_m, temp_s2, gamma);
        S2_low_array(i) = find_S2_low(i, temp_s2, gamma);
        S2_high_array(i) = find_S2_high(i, temp_s2, gamma);
    end
    
    % Построение графиков
    plot(1 : N, [(zeros(1, N) + M)', M_array', M_high_array', M_low_array']);
    xlabel('n');
    ylabel('y');
    xlim([10, N]);
    legend('f1', 'f2', 'f3', 'f4');
    
    %print -djpg p1.jpg
    figure;

    plot(1 : N, [(zeros(1, N) + S2)', S2_array', S2_high_array', S2_low_array']);
    xlabel('n');
    ylabel('z');
    xlim([10, N]);
    
    legend('g1', 'g2', 'g3', 'g4');
    %print -djpg p2.jpg
end

% Функция поиска нижней границы доверительного интервала для математического ожидания
function M_low = find_m_low(N, M, S2, gamma)
    M_low = M - sqrt(S2) * tinv((1 + gamma) / 2, N - 1) / sqrt(N);
end
% Функция поиска верхней границы доверительного интервала для математического ожидания
function M_high = find_m_high(N, M, S2, gamma)
    M_high = M + sqrt(S2) * tinv((1 + gamma) / 2, N - 1) / sqrt(N);
end
% Функция поиска нижней границы доверительного интервала для дисперсии
function S2_low = find_S2_low(N, S2, gamma)
    S2_low = ((N - 1) * S2) / chi2inv((1 + gamma) / 2, N - 1);
end
% Функция поиска верхней границы доверительного интервала для дисперсии
function S2_high = find_S2_high(N, S2, gamma)
    S2_high = ((N - 1) * S2) / chi2inv((1 - gamma) / 2, N - 1);
end